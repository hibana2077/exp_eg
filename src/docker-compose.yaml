services:
  core:
    build: ./core
    ports:
      - "14514:14514"
    volumes:
      - ./core:/app
    environment:
      HOST: "0.0.0.0"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      INFINITY_HOST: "infinity"
      INFINITY_PORT: 23817
      MONGO_SERVER: "mongodb://db_mongo:27017"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:14514/health"]
      interval: 10m30s
      timeout: 30s
      retries: 5
      start_period: 1m30s
    networks:
      - mynet

  web:
    build: ./web
    ports:
      - "4321:80"
    volumes:
      - ./web:/app
    environment:
      BACKEND_SERVER: "http://backend:8081"
      CORE_SERVER: "http://core:14514"
      OLLAMA_SERVER: "http://ollama:11434"
      MINIO_SERVER: "minio:9000"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      OPENROUTE_API_KEY: ${OPENROUTE_API_KEY}
    depends_on:
      - backend
    networks:
      - mynet

  backend:
    build: ./backend
    ports:
      - "8081:8081"
    volumes:
      - ./backend:/app
      - /data/sqllite:/app/data
    environment:
      HOST: "0.0.0.0"
      OLLAMA_SERVER: "http://ollama:11434"
      MONGO_SERVER: "mongodb://db_mongo:27017"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      INFINITY_HOST: "infinity"
      INFINITY_PORT: 23817
      # REDIS_HOST: "db_redis"
      # REDIS_PORT: 6379
      DATABASE_URL: "sqlite:////app/data/users.db"
    networks:
      - mynet

  db_mongo:
    restart: always
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - /data/mongo-data:/data/db
    networks:
      - mynet
    
  db_qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    networks:
      - mynet
    volumes:
      - /data/qdrant-data:/qdrant/storage
    restart: always

  # ollama:
  #   image: ollama/ollama:latest
  #   ports:
  #     - "11434:11434"
  #   networks:
  #     - mynet
  #   volumes:
  #     - ./ollama:/root/.ollama:rw
  #   container_name: ollama
  #   pull_policy: always
  #   tty: true
  #   restart: unless-stopped
  #   environment:
  #     - OLLAMA_KEEP_ALIVE=24h
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - driver: nvidia
  #             count: 1
  #             capabilities: [gpu]

  infinity:
    image: infiniflow/infinity:nightly
    container_name: infinity
    command: -f /var/infinity/infinity_conf.toml
    volumes:
      - /var/infinity/:/var/infinity
    ulimits:
      nofile:
        soft: 500000
        hard: 500000
    ports:
      - "23817:23817"
    networks:
      - mynet
    restart: unless-stopped

  minio:
    image: quay.io/minio/minio
    container_name: minio
    command: server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /data/minio-data:/data
      - ./minio-config.json:/tmp/.mc/config.json
    networks:
      - mynet
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  mynet:
    driver: bridge