services:
  core:
    build: ./core
    ports:
      - "14514:14514"
    volumes:
      - ./core:/app
    environment:
      HOST: "0.0.0.0"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      # MongoDB Atlas configuration (cloud/production database)
      MONGO_ATLAS_URI: ${MONGO_ATLAS_URI:-mongodb+srv://cluster0.example.mongodb.net/}
      MONGO_ATLAS_USERNAME: ${MONGO_ATLAS_USERNAME:-atlasuser}
      MONGO_ATLAS_PASSWORD: ${MONGO_ATLAS_PASSWORD:-atlaspassword}
      MONGO_ATLAS_ENABLED: ${MONGO_ATLAS_ENABLED:-false}
      # Local MongoDB configuration (development/testing database)
      MONGO_SERVER: "mongodb://db_mongo:27017"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:14514/health"]
      interval: 10m30s
      timeout: 30s
      retries: 5
      start_period: 1m30s
    networks:
      - mynet

  web:
    build: ./web
    ports:
      - "4321:80"
    volumes:
      - ./web:/app
    environment:
      BACKEND_SERVER: "http://backend:8081"
      CORE_SERVER: "http://core:14514"
      OLLAMA_SERVER: "http://ollama:11434"
      MINIO_SERVER: "minio:9000"
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      OPENROUTE_API_KEY: ${OPENROUTE_API_KEY}
      LLM_MODEL: ${LLM_MODEL}
    depends_on:
      - backend
    networks:
      - mynet

  backend:
    build: ./backend
    ports:
      - "8081:8081"
    volumes:
      - ./backend:/app
      - /data/sqllite:/app/data
    environment:
      HOST: "0.0.0.0"
      OLLAMA_SERVER: "http://ollama:11434"
      # MongoDB Atlas configuration (cloud/production database)
      MONGO_ATLAS_URI: ${MONGO_ATLAS_URI:-mongodb+srv://cluster0.example.mongodb.net/}
      MONGO_ATLAS_USERNAME: ${MONGO_ATLAS_USERNAME:-atlasuser}
      MONGO_ATLAS_PASSWORD: ${MONGO_ATLAS_PASSWORD:-atlaspassword}
      MONGO_ATLAS_ENABLED: ${MONGO_ATLAS_ENABLED:-false}
      # Local MongoDB configuration (development/testing database)
      MONGO_SERVER: "mongodb://db_mongo:27017"
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      DATABASE_URL: "sqlite:////app/data/users.db"
    networks:
      - mynet

  db_mongo:
    restart: always
    image: mongo:latest
    container_name: de_mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - /data/mongo-data:/data/db
    networks:
      - mynet

  db_qdrant:
    image: qdrant/qdrant:latest
    container_name: de_qdrant
    ports:
      - "6333:6333"
    networks:
      - mynet
    volumes:
      - /data/qdrant-data:/qdrant/storage
    restart: always

  db_atlas:
    image: mongodb/mongodb-atlas-local:latest
    container_name: de_atlas
    ports:
      - "27018:27017"
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=${MONGO_ATLAS_USERNAME:-atlasuser}
      - MONGODB_INITDB_ROOT_PASSWORD=${MONGO_ATLAS_PASSWORD:-atlaspassword}
      - RUNNER_LOG_FILE=/dev/stderr
    volumes:
      - /data/atlas-data:/data/db
      - /data/atlas-init:/docker-entrypoint-initdb.d
    networks:
      - mynet

  minio:
    image: quay.io/minio/minio
    container_name: de_minio
    command: server --console-address ":9001" /data
    environment:
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - /data/minio-data:/data
      - ./minio-config.json:/tmp/.mc/config.json
    networks:
      - mynet
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  mynet:
    driver: bridge